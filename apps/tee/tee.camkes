/*
 * Copyright 2021, Max Crone, Aalto University
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

import <std_connector.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;
import <global-connectors.camkes>;

import "components/Attestation/Attestation.camkes";
import "components/Driver/Driver.camkes";
import "components/Loader/Loader.camkes";
import "components/REEAPI/REEAPI.camkes";
import "components/Runner/Runner.camkes";
import "components/TA/TA.camkes";

assembly {
        composition {
                component Attestation attestation;
                component Driver driver;
                component Loader loader;
                component REEAPI api;
                component Runner runner;
                component TA ta;


                connection seL4RPCCall runner_api_conn(from runner.ree, to api.ree);
                connection seL4RPCCall api_loader_conn(from api.load, to loader.load);
                connection seL4RPCCall api_attest_conn(from api.attest, to attestation.attest);
                connection seL4RPCCall attest_driver_conn(from attestation.offload, to driver.offload);

                /* From serialserver_interrupt */
                // component Client interruptcli;
                component SerialServer serial;
                component TimeServer time_server;
                connection seL4RPCCall serial_time_server(from time_server.putchar, to serial.processed_putchar);
                connection seL4TimeServer serialserver_timer(from serial.timeout, to time_server.the_timer);
                /* interrupt based client to Serial */
                connection seL4RPCCall interrupt_output(from driver.interrupt_putchar, to serial.processed_putchar);
                connection seL4SerialServer interrupt_input(from driver.interrupt_getchar, to serial.getchar);
        }

        configuration {
                driver.interrupt_getchar_shmem_size = 0x1000;
                time_server.timers_per_client = 1;
        }
}

